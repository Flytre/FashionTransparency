<!DOCTYPE HTML>
<head>
    <link rel="shortcut icon"
          href="https://lh3.googleusercontent.com/eLf3Ye78fjSRAVadTWiU_FyN69LKLvuNp_1b7eAnNJlB5BKyNBVqGtZ0Nl2S8k0fk7mXeQ=s113">
    <title>Sustainable Brands</title>
    <link rel="stylesheet" type="text/css" href="css/template.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="/path/to/jquery-latest.js"></script>
    <script type="text/javascript" src="/path/to/jquery.tablesorter.js"></script>
    <script type="text/javascript" src="/path/to/jquery.tablesorter.widgets.js"></script>
</head>

<body>


<!-- Navbar -->
<div class="navbar">
    <img style="padding: 0px!important; margin-inline: 0px!important" src="img/temp_logo.jpg">
    <a href="../">Home</a>
    <a href="transparency_index">Transparency Index</a>
    <a href="sustainable" style="background-color: white;">Sustainable Brands</a>
    <a href="map">Store Locator</a>
    <a href="shop">Shop Online</a>
</div>

<div id="data_table_container">
<table class="visualized_table" id="my_table">
    <thead>
    <tr>
        <th>Brand Name</th>
        <th>Location</th>
        <th>Price Range</th>
        <th class="unsortable">Best For</th>
        <th class="unsortable">Product Range</th>
        <th class="unsortable">Size Range</th>
        <th class="unsortable">Explanation</th>
    </tr>
    </thead>
<tbody>
<tr>
    {{#each data}}
        <td><a target="_blank" href="{{this.[Link]}}">{{this.[Brand Name]}}</a></td>
        <td>{{this.[Location]}}</td>
        <td>{{this.[Price Range]}}</td>
        <td>{{this.[Best For]}}</td>
        <td>{{this.[Product Range]}}</td>
        <td>{{this.[Size Range]}}</td>
        <td>{{this.[Explanation]}}</td>
    </tr>
    {{/each}}
</tbody>
</table>
</div>

<script>
//https://codepen.io/dcode-software/pen/zYGOrzK
function sortTableByColumn(table, column, asc = true) {
    const dirModifier = asc ? 1 : -1;
    const tBody = table.tBodies[0];
    const rows = Array.from(tBody.querySelectorAll("tr"));

    // Sort each row
    const sortedRows = rows.sort((a, b) => {
        const aColText = a.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();
        const bColText = b.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();

        return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
    });

    // Remove all existing TRs from the table
    while (tBody.firstChild) {
        tBody.removeChild(tBody.firstChild);
    }

    // Re-add the newly sorted rows
    tBody.append(...sortedRows);

    // Remember how the column is currently sorted
    table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-asc", asc);
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-desc", !asc);
}

document.querySelectorAll(".visualized_table th").forEach(headerCell => {
    if (!headerCell.classList.contains("unsortable")){
        headerCell.addEventListener("click", () => {
        const tableElement = headerCell.parentElement.parentElement.parentElement;
        const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
        const currentIsAscending = headerCell.classList.contains("th-sort-asc");

        sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
        });
    }
});

</script>

</body>
</html>